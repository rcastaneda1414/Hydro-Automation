<?php


// Database information
// Database hosting site needs to be able to accept remote access to be able to run
// this script from pc running the HOBOnode viewer utility
$mysql_host ="***";
$mysql_db ="***";
$mysql_user ="***";
$mysql_password ="***";

// Database connection
$con = mysqli_connect($mysql_host,$mysql_user,$mysql_password);
if(!$con)
{
	die('could not connect: '. mysql_error());
}
mysqli_select_db($con,$mysql_db);

// File function to get last record on sensor file
// This file is generated by the HOBOnode viewer utility and saved with this named
$filename= "C:/Users/richi/Desktop/sensor_data.txt";
$file = fopen($filename, "r");
if(!$file){
	trigger_error('failed to allocate resource');
	exit;
}
$begining = fseek($file, 0);      
$pos = -2;
$last_data = " ";
while ($last_data != "\n") {
    fseek($file, $pos, SEEK_END);
    if(ftell($file) == $begining){
        break;
		}
	$last_data = fgetc($file);
    $pos = $pos - 1;
}
$last_data = fgets($file);
fclose($file);
//echo $last_data;

// Explode to get last record segregated based on delimiter by "tab"
$delimiter = "	";
$splitcontents = explode($delimiter,$last_data);


// Weather functions using API key to get weather info
// *************************************************************
// In the following line the (***) needs to be replaced with the api key from wunderground.com.
// Allows 10 queries per hour
  $json_string = file_get_contents("http://api.wunderground.com/api/***/geolookup/conditions/q/CA/Salinas.json");
  $parsed_json = json_decode($json_string);
  $location = $parsed_json->{'location'}->{'city'};
  $temp_f = $parsed_json->{'current_observation'}->{'temp_f'};

  $weather = $parsed_json->{'current_observation'}->{'weather'};
  $wind_speed = $parsed_json->{'current_observation'}->{'wind_mph'};
  $wind_dir = $parsed_json->{'current_observation'}->{'wind_dir'};
  $humidity = $parsed_json->{'current_observation'}->{'relative_humidity'};
  $precip = $parsed_json->{'current_observation'}->{'precip_today_string'};
   /*
  $precip1 = $parsed_json->{'current_observation'}->{'precip_1hr_string'};
  $precip2 = $parsed_json->{'current_observation'}->{'precip_1hr_in'};
  $precip3 = $parsed_json->{'current_observation'}->{'precip_1hr_metric'};
  $precip = $parsed_json->{'current_observation'}->{'precip_today_string'};
  $precip5 = $parsed_json->{'current_observation'}->{'precip_today_in'};
  $precip6 = $parsed_json->{'current_observation'}->{'precip_today_metric'};

  /*
  echo "Current temperature in ${location} is: ${temp_f}\n";

// *******************************************************************
// Weather values created for testing purposes
// Use this when testing to avoid calls to the api key


   $temp_f = "70";
   $weather = "sunny";
   $wind_speed = "9.5";
   $wind_dir = "NE";
   $humidity = "85%";
   $precip = "0%";
   */
//*************************************************
// Query for testing purposes
	mysqli_query($con,"INSERT INTO measurements
	(file_timestamp, sensor_1, sensor_2, sensor_3, 
	temperature, weather_condition, wind_speed, 
	wind_direction, humidity, precipitation,sensor_id)
	
	VALUES('$splitcontents[0]', '$splitcontents[1]', 
	'$splitcontents[2]', '$splitcontents[3]', 
	'$temp_f', '$weather', '$wind_speed', 
	'$wind_dir', '$humidity', '$precip','4')");
	echo "done";
	
	mysqli_close($con);


// Real Query



?>
